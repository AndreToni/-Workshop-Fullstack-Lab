{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Aplicacoes\\\\Mydailystatus\\\\backend\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc('2020-04-10').collection('checks').doc(session.user.sub).get();\n    const tosdayData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (tosdayData) {\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Projetos/Aplicacoes/Mydailystatus/backend/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","todaysCheckin","collection","doc","user","sub","get","tosdayData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACbJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEM,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACvBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AAClC,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAjBD;;AAmBA,eAAeD,GAAf;AAEA,OAAO,eAAeO,kBAAf,CAAkC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAlC,EAA6C;AAChD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAW;AACP,UAAME,aAAa,GAAG,MAAMb,EAAE,CACzBc,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnB,YAFmB,EAGvBD,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBJ,OAAO,CAACK,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIf,WAAW,GAAG,IAAlB;;AACA,QAAGc,UAAH,EAAc;AACVd,MAAAA,WAAW,GAAG,KAAd;AACH;;AAED,WAAM;AACFH,MAAAA,KAAK,EAAC;AACFC,QAAAA,MAAM,EAAE,IADN;AAEFa,QAAAA,IAAI,EAACL,OAAO,CAACK,IAFX;AAGFX,QAAAA;AAHE;AADJ,KAAN;AAOH;;AACD,SAAM;AACFH,IAAAA,KAAK,EAAC;AACFC,MAAAA,MAAM,EAAC,KADL;AAEFa,MAAAA,IAAI,EAAC;AAFH;AADJ,GAAN;AAMH","sourcesContent":["import React, {useEffect} from 'react';\r\nimport auth0 from '../lib/auth0';\r\nimport router from 'next/router';\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/');\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreate){\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nexport async function getServerSideProps({req, res}){\r\n    const session = await auth0.getSession(req);\r\n    if(session){\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc('2020-04-10')\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n        \r\n        const tosdayData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if(tosdayData){\r\n            forceCreate = false\r\n        }\r\n\r\n        return{\r\n            props:{\r\n                isAuth: true,\r\n                user:session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return{\r\n        props:{\r\n            isAuth:false,\r\n            user:{}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}