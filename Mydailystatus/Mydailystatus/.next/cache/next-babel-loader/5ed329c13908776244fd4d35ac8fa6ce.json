{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Aplicacoes\\\\Mydailystatus\\\\backend\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, JSON.stringify(checkin.coords)));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const tosdayData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (tosdayData) {\n      forceCreate = false;\n      const checkins = db.collection('markers').doc(currentDate).collection('checks').near({\n        center: tosdayData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.foreach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Projetos/Aplicacoes/Mydailystatus/backend/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","tosdayData","data","near","center","coordinates","radius","checkinsList","docs","foreach","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport auth0 from '../lib/auth0';\r\nimport router from 'next/router';\r\nimport { db } from '../lib/db';\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/');\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreate){\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <table>\r\n                {props.checkins.map(checkin => {\r\n                    return(\r\n                        <tr>\r\n                            <td>\r\n                                {checkin.id}\r\n                            </td>\r\n                            <td>\r\n                                {checkin.status}\r\n                            </td>\r\n                            <td>\r\n                                {JSON.stringify(checkin.coords)}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                \r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nexport async function getServerSideProps({req, res}){\r\n    const session = await auth0.getSession(req);\r\n    if(session){\r\n        const today = new Date()\r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n        \r\n        const tosdayData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if(tosdayData){\r\n            forceCreate = false\r\n            const checkins = db\r\n                .collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: tosdayData.coordinates,\r\n                    radius: 1000\r\n                })\r\n                .get()\r\n            const checkinsList = [];\r\n            checkins.docs.foreach(doc => {\r\n                checkinsList.push({\r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords:{\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    }\r\n                })\r\n            })\r\n            return{\r\n                props:{\r\n                    isAuth: true,\r\n                    user:session.user,\r\n                    forceCreate : false,\r\n                    checkins: checkinsList \r\n                }\r\n            }\r\n        }\r\n\r\n        return{\r\n            props:{\r\n                isAuth: true,\r\n                user:session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return{\r\n        props:{\r\n            isAuth:false,\r\n            user:{}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}